//Удаление	Добавление	Перестановка	Поиск	Сортировка
//Минимальный элемент;	N элементов, начиная с номера К;	Поменять местами элементы с четными и нечетными номерами;	Элемент с заданным ключом (значением)	Простой выбор


#include <iostream>
#include <math.h>
#include <ctime>


void print(int *a, int n){
	std::cout<<"\nArray: ";
	for(int i=0;i<n;i++){
		std::cout<<a[i]<<"; ";
	}
	std::cout<<"\n\n";
}

void main(){
	int n,*a;
	
	std::cout<<"Enter n = ";
	std::cin>>n;
	std::cout<<"\n";

	a=new int[100];

	//=============================
	//Заполнение
	//=============================
	srand(time(0));
	for(int i=0;i<n;i++){
		a[i]=rand()%100;
	}
	print(a,n);
	
	//=============================
	//Удаление (минимальный элемент)
	//=============================	
	
	//Нахождение позиции мин элемента
	int minN=0;
	for(int i=1;i<n;i++){
		if (a[i]<a[minN]) {
			minN = i;
		}
	}
	std::cout<<"\n\nmin="<<a[minN]<<"; minN="<<(minN+1);
	
	//Сдвиг элементов которые стоят правее минимального на 1 элемент влево
	for(int i=minN;i<n-1;i++) {
		a[i] = a[i+1];
	}
	n--;
	print(a,n);

	//=============================
	//Вставка (N элементов, начиная с номера К)
	//=============================
	/*
	int insN, insK;
	std::cout<<"Enter n = ";
	std::cin>>insN;
	std::cout<<"Enter k = ";
	std::cin>>insK;
	std::cout<<"\n";
	
	//Сдвиг элементов на insN позици вправо начиная с позиции insK
	insK--;
	for(int i=n-1;i>=insK;i--){
		a[i+insN] = a[i];
	}

	//Заполнение insN элементов, начиная с позиции insK нулями
	for(int i=insK;i<insK+insN;i++) {
		a[i] = 0;
	}
	n+=insN;
	print(a,n);
	*/

	//=============================
	//Перестановка (Поменять местами элементы с четными и нечетными номерами)
	//=============================
	/*
	int tmp;
	for(int i=0;i<n/2;i++){
		tmp=a[2*i];
		a[2*i]=a[2*i+1];
		a[2*i+1]=tmp;
	}
	print(a,n);
	*/

	//=============================
	//Поиск (Элемент с заданным ключом (значением))
	//=============================
	/*
	int num;
	bool find=false;
	
	//Вводится значения элемента или его номер
	std::cout<<"num=";
	std::cin>>num;
	
	//Поиск элемента по его номеру или значению
	for(int i=0;i<n;i++){
		if (i == (num-1)) {
			std::cout<<"\n"<<a[i]<<"["<<i+1<<"] - naiden po kluchu;";
			find = true;
		} 			
		if (a[i] == num) {
			std::cout<<"\n"<<a[i]<<"["<<i+1<<"] - naiden po znacheniu;";
			find = true;
		}		
	}
	
	if (!find){
		std::cout<<"\nElement ne naiden\n";
	} else {
		std::cout<<"\n";
	}*/
	

	//=============================
	//Сортировка методом простого обмена
	//=============================
	/*
	int tmp,minN;

	for(int i=0;i<n-1;i++){
		minN=i;
		//Находждение номера мин элемента среди оставшихся
		for(int j=i;j<n;j++){
			if (a[j] < a[minN]) {
				minN = j;
			}			
		}

		//Перемещение мин элемента влево
		tmp=a[i];
		a[i]=a[minN];
		a[minN]=tmp;
	}
	print(a,n);
	*/
}
